name: Build and Cache Repocate

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Trigger on tag push that starts with 'v'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Go modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build Docker image
      run: |
        docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache \
                            --cache-to=type=local,dest=/tmp/.buildx-cache \
                            --tag cdaprod/repocate:${{ github.sha }} .

    - name: Save Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-artifact
        path: /tmp/.buildx-cache

  push:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Download Build Artifact
      uses: actions/download-artifact@v3
      with:
        name: build-artifact
        path: /tmp/.buildx-cache

    - name: Push Docker image to DockerHub
      run: |
        docker buildx build --load --cache-from=type=local,src=/tmp/.buildx-cache \
                            --tag cdaprod/repocate:${{ github.ref_name }} \
                            --push .